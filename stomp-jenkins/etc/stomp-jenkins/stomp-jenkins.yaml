---
# YAML!
rserver: failover://(stomp://gituser:gitpw@broker01:61613,stomp://gituser:gitpw@broker02:61613)
# ... Where gituser is an AMQ user with at least read access to listen-topic
# ... and write access to report-topic with p/w, er, gitpw.
# ... You may or may not need to fill in the FQDNs for your broker(s) if you've 
# ... performed the same 'clever' CNAMEing that I have. Well, I say 'clever'...
#
# Stomp connection options.
#
stomp-options: initialReconnectDelay=0.01&randomize=false&useExponentialBackOff=true&MaxReconnectDelay=30&BackOffMultiplier=2&MaxReconnectAttempts=0&Backup=false&Timeout=-1
#
# Topics: (You should really have your own topic hierarchy)
listen-topic: future.git.commits
report-topic: future.events.jenkins
#
# Jenkins endpoint
jenkins-url: http://jenkins.yourorg.com:8080
#
# Jenkins project list.
# There will be problems when a repo contains multiple Jenkins jobs.
# And lo, there were problems...
#
# It's alleged to work like this:
# Within jenkins-projects are a sequence of repository tags which contain
# zero or more projects, each of those having a corresponding Jenkins project
# name and semi-secret key. If the repository contains but one project, then
# the Jenkins data is pulled up a level.
# Also. If you have references for which you don't want to trigger the Jenkins
# job, you can now chuck in a regex to ignore.
#
# If that's as clear as mud, you may blame the bright sort who thought it a good
# idea to have multiple projects in one repository.
#
jenkins-projects:
  my-single-project:
    project: my-Jenkins-project
    ticket: MY_SECRET_JENKINS_KEY
    ignore_refs: refs\/tags\/jenkins-(?:.*)
  their-legacy-repo:
    awful-project:
      project: awful-jenkins-project
      ticket: AWFUL_KEY
    time-sink:
      project: name%20containing%20spaces
      ticket: WASTE
  
