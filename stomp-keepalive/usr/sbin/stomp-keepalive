#!/usr/bin/env ruby

require 'rubygems'
require 'yaml'
require 'stomp'
require 'optparse'

options = {}

optparse = OptionParser.new do|opts|
  opts.banner = "Usage: stomp-keepalive [options]"
 
  options[:debug] = false
  opts.on( '-d', '--debug', 'Much output' ) do
    options[:debug] = true
  end
 
  options[:configfile] = "/etc/stomp-keepalive/stomp-keepalive.yaml"
  opts.on( '-c', '--config FILE', 'Config is FILE' ) do|file|
    options[:configfile] = file
  end
 
  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
      exit
  end
end

optparse.parse!

if options[:debug]
  puts "DEBUG"
  puts "CONFIGFILE: #{options[:configfile]}"
end

yconfig = YAML.load_file(options[:configfile])

puts YAML.dump(yconfig) if options[:debug]

host1 = yconfig["stompserver1"]
host2 = yconfig["stompserver2"]
port1 = yconfig["stompport1"]
port2 = yconfig["stompport2"]
ktopics = yconfig["topics"]

puts ktopics.inspect if options[:debug]

ktopics.each do |name,creds|
  user = creds["user"]
  pass = creds["pass"]
  type = creds["type"]

  stompconnector = "failover://(stomp://#{user}:#{pass}@#{host1}:#{port1},stomp://#{user}:#{pass}@#{host2}:#{port2})" + "?" + yconfig["stomp-options"]
  client = Stomp::Client.new(stompconnector)
  if client
    target = "/#{type}/#{name}"
    client.publish(target,"\n")
    puts target.inspect if options[:debug]
    client.close
  end
end
